// <auto-generated />
using System;
using Homee.DataLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Homee.DataLayer.Migrations
{
    [DbContext(typeof(HomeedbContext))]
    partial class HomeedbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Homee.DataLayer.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime");

                    b.Property<string>("CitizenId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__349DA5A6CBA7BC63");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Box", b =>
                {
                    b.Property<int>("BoxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoxId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BoxId")
                        .HasName("PK__Box__136CF764A047EDC6");

                    b.ToTable("Box", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<int>("RenderId")
                        .HasColumnType("int");

                    b.HasKey("ContractId")
                        .HasName("PK__Contract__C90D3469C5738CE8");

                    b.HasIndex("PlaceId");

                    b.HasIndex("RenderId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.FavoritePost", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("AccountId", "PostId")
                        .HasName("PK__Favorite__AE3C83A72EBB023E");

                    b.HasIndex("PostId");

                    b.ToTable("FavoritePost", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("No")
                        .HasColumnType("int")
                        .HasColumnName("NO");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("ImageId")
                        .HasName("PK__Image__7516F70C67857F52");

                    b.HasIndex("PostId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BoxId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MessageId")
                        .HasName("PK__Message__C87C0C9C49175822");

                    b.HasIndex("AccountId");

                    b.HasIndex("BoxId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UrlPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E123DFEE9ED");

                    b.HasIndex("AccountId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("paymentId");

                    b.Property<DateTime>("SubscribedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BCF5B4B450D");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaceId"));

                    b.Property<string>("Distinct")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PlaceId")
                        .HasName("PK__Place__D5222B6EE2245CCC");

                    b.HasIndex("OwnerId");

                    b.ToTable("Place", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PostId")
                        .HasName("PK__Post__AA12601842D5C110");

                    b.HasIndex("RoomId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<decimal?>("Area")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Direction")
                        .HasColumnType("int");

                    b.Property<decimal?>("ElectricAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("InteriorStatus")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBlock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsRented")
                        .HasColumnType("bit");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RentAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("RoomName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("ServiceAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<decimal?>("WaterAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("RoomId")
                        .HasName("PK__Room__328639196F4E51A9");

                    b.HasIndex("PlaceId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__Subscrip__9A2B249DCF1AAF82");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Contract", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Place", "Place")
                        .WithMany("Contracts")
                        .HasForeignKey("PlaceId")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_Place");

                    b.HasOne("Homee.DataLayer.Models.Account", "Render")
                        .WithMany("Contracts")
                        .HasForeignKey("RenderId")
                        .IsRequired()
                        .HasConstraintName("FK_Contract_Render");

                    b.Navigation("Place");

                    b.Navigation("Render");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.FavoritePost", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Account", "Account")
                        .WithMany("FavoritePosts")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_FavoritePost_Account");

                    b.HasOne("Homee.DataLayer.Models.Post", "Post")
                        .WithMany("FavoritePosts")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_FavoritePost_Post");

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Image", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Image_Post");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Message", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Account", "Account")
                        .WithMany("Messages")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Message__Account__7E37BEF6");

                    b.HasOne("Homee.DataLayer.Models.Box", "Box")
                        .WithMany("Messages")
                        .HasForeignKey("BoxId")
                        .HasConstraintName("FK__Message__BoxId__7D439ABD");

                    b.Navigation("Account");

                    b.Navigation("Box");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Notification", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Order", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Account", "Owner")
                        .WithMany("Orders")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Owner");

                    b.HasOne("Homee.DataLayer.Models.Subscription", "Subscription")
                        .WithMany("Orders")
                        .HasForeignKey("SubscriptionId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Subscription");

                    b.Navigation("Owner");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Place", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Account", "Owner")
                        .WithMany("Places")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK_Place_Owner");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Post", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Room", "Room")
                        .WithMany("Posts")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK_Post_Room");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Room", b =>
                {
                    b.HasOne("Homee.DataLayer.Models.Place", "Place")
                        .WithMany("Rooms")
                        .HasForeignKey("PlaceId")
                        .HasConstraintName("FK__Room__PlaceId__74AE54BC");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Account", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("FavoritePosts");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Places");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Box", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Place", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Post", b =>
                {
                    b.Navigation("FavoritePosts");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Room", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Homee.DataLayer.Models.Subscription", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
